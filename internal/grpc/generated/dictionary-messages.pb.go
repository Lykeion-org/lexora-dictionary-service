// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: dictionary-messages.proto

package lexora

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SearchMode int32

const (
	SearchMode_SEARCH_MODE_UNSPECIFIED  SearchMode = 0
	SearchMode_SEARCH_MODE_WORD         SearchMode = 1
	SearchMode_SEARCH_MODE_SYMBOL_LEMMA SearchMode = 2
	SearchMode_SEARCH_MODE_ANY          SearchMode = 3
)

// Enum value maps for SearchMode.
var (
	SearchMode_name = map[int32]string{
		0: "SEARCH_MODE_UNSPECIFIED",
		1: "SEARCH_MODE_WORD",
		2: "SEARCH_MODE_SYMBOL_LEMMA",
		3: "SEARCH_MODE_ANY",
	}
	SearchMode_value = map[string]int32{
		"SEARCH_MODE_UNSPECIFIED":  0,
		"SEARCH_MODE_WORD":         1,
		"SEARCH_MODE_SYMBOL_LEMMA": 2,
		"SEARCH_MODE_ANY":          3,
	}
)

func (x SearchMode) Enum() *SearchMode {
	p := new(SearchMode)
	*p = x
	return p
}

func (x SearchMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SearchMode) Descriptor() protoreflect.EnumDescriptor {
	return file_dictionary_messages_proto_enumTypes[0].Descriptor()
}

func (SearchMode) Type() protoreflect.EnumType {
	return &file_dictionary_messages_proto_enumTypes[0]
}

func (x SearchMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SearchMode.Descriptor instead.
func (SearchMode) EnumDescriptor() ([]byte, []int) {
	return file_dictionary_messages_proto_rawDescGZIP(), []int{0}
}

// READ MESSAGES
type GetReferentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Uid           string                 `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetReferentRequest) Reset() {
	*x = GetReferentRequest{}
	mi := &file_dictionary_messages_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetReferentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReferentRequest) ProtoMessage() {}

func (x *GetReferentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dictionary_messages_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReferentRequest.ProtoReflect.Descriptor instead.
func (*GetReferentRequest) Descriptor() ([]byte, []int) {
	return file_dictionary_messages_proto_rawDescGZIP(), []int{0}
}

func (x *GetReferentRequest) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

type GetSymbolRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Uid           string                 `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSymbolRequest) Reset() {
	*x = GetSymbolRequest{}
	mi := &file_dictionary_messages_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSymbolRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSymbolRequest) ProtoMessage() {}

func (x *GetSymbolRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dictionary_messages_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSymbolRequest.ProtoReflect.Descriptor instead.
func (*GetSymbolRequest) Descriptor() ([]byte, []int) {
	return file_dictionary_messages_proto_rawDescGZIP(), []int{1}
}

func (x *GetSymbolRequest) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

type GetWordRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Uid           string                 `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetWordRequest) Reset() {
	*x = GetWordRequest{}
	mi := &file_dictionary_messages_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetWordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWordRequest) ProtoMessage() {}

func (x *GetWordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dictionary_messages_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWordRequest.ProtoReflect.Descriptor instead.
func (*GetWordRequest) Descriptor() ([]byte, []int) {
	return file_dictionary_messages_proto_rawDescGZIP(), []int{2}
}

func (x *GetWordRequest) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

type ListReferentsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Page          int32                  `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	PageSize      int32                  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListReferentsRequest) Reset() {
	*x = ListReferentsRequest{}
	mi := &file_dictionary_messages_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListReferentsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListReferentsRequest) ProtoMessage() {}

func (x *ListReferentsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dictionary_messages_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListReferentsRequest.ProtoReflect.Descriptor instead.
func (*ListReferentsRequest) Descriptor() ([]byte, []int) {
	return file_dictionary_messages_proto_rawDescGZIP(), []int{3}
}

func (x *ListReferentsRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListReferentsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type ListReferentsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Referents     []*Referent            `protobuf:"bytes,1,rep,name=referents,proto3" json:"referents,omitempty"`
	TotalCount    int32                  `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListReferentsResponse) Reset() {
	*x = ListReferentsResponse{}
	mi := &file_dictionary_messages_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListReferentsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListReferentsResponse) ProtoMessage() {}

func (x *ListReferentsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dictionary_messages_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListReferentsResponse.ProtoReflect.Descriptor instead.
func (*ListReferentsResponse) Descriptor() ([]byte, []int) {
	return file_dictionary_messages_proto_rawDescGZIP(), []int{4}
}

func (x *ListReferentsResponse) GetReferents() []*Referent {
	if x != nil {
		return x.Referents
	}
	return nil
}

func (x *ListReferentsResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

type FindReferentsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Query         string                 `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	SearchMode    SearchMode             `protobuf:"varint,2,opt,name=search_mode,json=searchMode,proto3,enum=lexora.SearchMode" json:"search_mode,omitempty"`
	Language      Language               `protobuf:"varint,3,opt,name=language,proto3,enum=lexora.Language" json:"language,omitempty"`
	Page          int32                  `protobuf:"varint,4,opt,name=page,proto3" json:"page,omitempty"`
	PageSize      int32                  `protobuf:"varint,5,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FindReferentsRequest) Reset() {
	*x = FindReferentsRequest{}
	mi := &file_dictionary_messages_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FindReferentsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindReferentsRequest) ProtoMessage() {}

func (x *FindReferentsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dictionary_messages_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindReferentsRequest.ProtoReflect.Descriptor instead.
func (*FindReferentsRequest) Descriptor() ([]byte, []int) {
	return file_dictionary_messages_proto_rawDescGZIP(), []int{5}
}

func (x *FindReferentsRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *FindReferentsRequest) GetSearchMode() SearchMode {
	if x != nil {
		return x.SearchMode
	}
	return SearchMode_SEARCH_MODE_UNSPECIFIED
}

func (x *FindReferentsRequest) GetLanguage() Language {
	if x != nil {
		return x.Language
	}
	return Language_LANGUAGE_UNSPECIFIED
}

func (x *FindReferentsRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *FindReferentsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type FindReferentsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Referents     []*Referent            `protobuf:"bytes,1,rep,name=referents,proto3" json:"referents,omitempty"`
	TotalCount    int32                  `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FindReferentsResponse) Reset() {
	*x = FindReferentsResponse{}
	mi := &file_dictionary_messages_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FindReferentsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindReferentsResponse) ProtoMessage() {}

func (x *FindReferentsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dictionary_messages_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindReferentsResponse.ProtoReflect.Descriptor instead.
func (*FindReferentsResponse) Descriptor() ([]byte, []int) {
	return file_dictionary_messages_proto_rawDescGZIP(), []int{6}
}

func (x *FindReferentsResponse) GetReferents() []*Referent {
	if x != nil {
		return x.Referents
	}
	return nil
}

func (x *FindReferentsResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

// CREATE MESSAGES
type CreateReferentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EnReference   string                 `protobuf:"bytes,1,opt,name=en_reference,json=enReference,proto3" json:"en_reference,omitempty"`
	ImageSource   *string                `protobuf:"bytes,2,opt,name=image_source,json=imageSource,proto3,oneof" json:"image_source,omitempty"`
	Symbols       []*Symbol              `protobuf:"bytes,3,rep,name=symbols,proto3" json:"symbols,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateReferentRequest) Reset() {
	*x = CreateReferentRequest{}
	mi := &file_dictionary_messages_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateReferentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateReferentRequest) ProtoMessage() {}

func (x *CreateReferentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dictionary_messages_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateReferentRequest.ProtoReflect.Descriptor instead.
func (*CreateReferentRequest) Descriptor() ([]byte, []int) {
	return file_dictionary_messages_proto_rawDescGZIP(), []int{7}
}

func (x *CreateReferentRequest) GetEnReference() string {
	if x != nil {
		return x.EnReference
	}
	return ""
}

func (x *CreateReferentRequest) GetImageSource() string {
	if x != nil && x.ImageSource != nil {
		return *x.ImageSource
	}
	return ""
}

func (x *CreateReferentRequest) GetSymbols() []*Symbol {
	if x != nil {
		return x.Symbols
	}
	return nil
}

type CreateSymbolRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ReferentUid   string                 `protobuf:"bytes,1,opt,name=referent_uid,json=referentUid,proto3" json:"referent_uid,omitempty"`
	Language      Language               `protobuf:"varint,2,opt,name=language,proto3,enum=lexora.Language" json:"language,omitempty"`
	SymbolType    SymbolType             `protobuf:"varint,3,opt,name=symbol_type,json=symbolType,proto3,enum=lexora.SymbolType" json:"symbol_type,omitempty"`
	Lemma         *Word                  `protobuf:"bytes,4,opt,name=lemma,proto3,oneof" json:"lemma,omitempty"`
	Words         []*Word                `protobuf:"bytes,5,rep,name=words,proto3" json:"words,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateSymbolRequest) Reset() {
	*x = CreateSymbolRequest{}
	mi := &file_dictionary_messages_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateSymbolRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSymbolRequest) ProtoMessage() {}

func (x *CreateSymbolRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dictionary_messages_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSymbolRequest.ProtoReflect.Descriptor instead.
func (*CreateSymbolRequest) Descriptor() ([]byte, []int) {
	return file_dictionary_messages_proto_rawDescGZIP(), []int{8}
}

func (x *CreateSymbolRequest) GetReferentUid() string {
	if x != nil {
		return x.ReferentUid
	}
	return ""
}

func (x *CreateSymbolRequest) GetLanguage() Language {
	if x != nil {
		return x.Language
	}
	return Language_LANGUAGE_UNSPECIFIED
}

func (x *CreateSymbolRequest) GetSymbolType() SymbolType {
	if x != nil {
		return x.SymbolType
	}
	return SymbolType_SYMBOL_TYPE_OBJECT
}

func (x *CreateSymbolRequest) GetLemma() *Word {
	if x != nil {
		return x.Lemma
	}
	return nil
}

func (x *CreateSymbolRequest) GetWords() []*Word {
	if x != nil {
		return x.Words
	}
	return nil
}

type CreateWordRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SymbolUid     string                 `protobuf:"bytes,1,opt,name=symbol_uid,json=symbolUid,proto3" json:"symbol_uid,omitempty"`
	Word          string                 `protobuf:"bytes,2,opt,name=word,proto3" json:"word,omitempty"`
	SoundSource   *string                `protobuf:"bytes,3,opt,name=sound_source,json=soundSource,proto3,oneof" json:"sound_source,omitempty"`
	Ipa           *string                `protobuf:"bytes,4,opt,name=ipa,proto3,oneof" json:"ipa,omitempty"`
	WordType      WordType               `protobuf:"varint,5,opt,name=word_type,json=wordType,proto3,enum=lexora.WordType" json:"word_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateWordRequest) Reset() {
	*x = CreateWordRequest{}
	mi := &file_dictionary_messages_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateWordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateWordRequest) ProtoMessage() {}

func (x *CreateWordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dictionary_messages_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateWordRequest.ProtoReflect.Descriptor instead.
func (*CreateWordRequest) Descriptor() ([]byte, []int) {
	return file_dictionary_messages_proto_rawDescGZIP(), []int{9}
}

func (x *CreateWordRequest) GetSymbolUid() string {
	if x != nil {
		return x.SymbolUid
	}
	return ""
}

func (x *CreateWordRequest) GetWord() string {
	if x != nil {
		return x.Word
	}
	return ""
}

func (x *CreateWordRequest) GetSoundSource() string {
	if x != nil && x.SoundSource != nil {
		return *x.SoundSource
	}
	return ""
}

func (x *CreateWordRequest) GetIpa() string {
	if x != nil && x.Ipa != nil {
		return *x.Ipa
	}
	return ""
}

func (x *CreateWordRequest) GetWordType() WordType {
	if x != nil {
		return x.WordType
	}
	return WordType_WORD_TYPE_UNSPECIFIED
}

// UPDATE MESSAGES
type UpdateReferentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Referent      *Referent              `protobuf:"bytes,1,opt,name=referent,proto3" json:"referent,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateReferentRequest) Reset() {
	*x = UpdateReferentRequest{}
	mi := &file_dictionary_messages_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateReferentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateReferentRequest) ProtoMessage() {}

func (x *UpdateReferentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dictionary_messages_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateReferentRequest.ProtoReflect.Descriptor instead.
func (*UpdateReferentRequest) Descriptor() ([]byte, []int) {
	return file_dictionary_messages_proto_rawDescGZIP(), []int{10}
}

func (x *UpdateReferentRequest) GetReferent() *Referent {
	if x != nil {
		return x.Referent
	}
	return nil
}

type UpdateSymbolRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Symbol        *Symbol                `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateSymbolRequest) Reset() {
	*x = UpdateSymbolRequest{}
	mi := &file_dictionary_messages_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateSymbolRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSymbolRequest) ProtoMessage() {}

func (x *UpdateSymbolRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dictionary_messages_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSymbolRequest.ProtoReflect.Descriptor instead.
func (*UpdateSymbolRequest) Descriptor() ([]byte, []int) {
	return file_dictionary_messages_proto_rawDescGZIP(), []int{11}
}

func (x *UpdateSymbolRequest) GetSymbol() *Symbol {
	if x != nil {
		return x.Symbol
	}
	return nil
}

type UpdateWordRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Word          *Word                  `protobuf:"bytes,1,opt,name=word,proto3" json:"word,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateWordRequest) Reset() {
	*x = UpdateWordRequest{}
	mi := &file_dictionary_messages_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateWordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateWordRequest) ProtoMessage() {}

func (x *UpdateWordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dictionary_messages_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateWordRequest.ProtoReflect.Descriptor instead.
func (*UpdateWordRequest) Descriptor() ([]byte, []int) {
	return file_dictionary_messages_proto_rawDescGZIP(), []int{12}
}

func (x *UpdateWordRequest) GetWord() *Word {
	if x != nil {
		return x.Word
	}
	return nil
}

// DELETE MESSAGES
type DeleteReferentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ReferentUid   string                 `protobuf:"bytes,1,opt,name=referent_uid,json=referentUid,proto3" json:"referent_uid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteReferentRequest) Reset() {
	*x = DeleteReferentRequest{}
	mi := &file_dictionary_messages_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteReferentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteReferentRequest) ProtoMessage() {}

func (x *DeleteReferentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dictionary_messages_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteReferentRequest.ProtoReflect.Descriptor instead.
func (*DeleteReferentRequest) Descriptor() ([]byte, []int) {
	return file_dictionary_messages_proto_rawDescGZIP(), []int{13}
}

func (x *DeleteReferentRequest) GetReferentUid() string {
	if x != nil {
		return x.ReferentUid
	}
	return ""
}

type DeleteSymbolRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SymbolUid     string                 `protobuf:"bytes,1,opt,name=symbol_uid,json=symbolUid,proto3" json:"symbol_uid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteSymbolRequest) Reset() {
	*x = DeleteSymbolRequest{}
	mi := &file_dictionary_messages_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteSymbolRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSymbolRequest) ProtoMessage() {}

func (x *DeleteSymbolRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dictionary_messages_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSymbolRequest.ProtoReflect.Descriptor instead.
func (*DeleteSymbolRequest) Descriptor() ([]byte, []int) {
	return file_dictionary_messages_proto_rawDescGZIP(), []int{14}
}

func (x *DeleteSymbolRequest) GetSymbolUid() string {
	if x != nil {
		return x.SymbolUid
	}
	return ""
}

type DeleteWordRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WordUid       string                 `protobuf:"bytes,1,opt,name=word_uid,json=wordUid,proto3" json:"word_uid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteWordRequest) Reset() {
	*x = DeleteWordRequest{}
	mi := &file_dictionary_messages_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteWordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteWordRequest) ProtoMessage() {}

func (x *DeleteWordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dictionary_messages_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteWordRequest.ProtoReflect.Descriptor instead.
func (*DeleteWordRequest) Descriptor() ([]byte, []int) {
	return file_dictionary_messages_proto_rawDescGZIP(), []int{15}
}

func (x *DeleteWordRequest) GetWordUid() string {
	if x != nil {
		return x.WordUid
	}
	return ""
}

// LINKING OPERATIONS MESSAGES
type LinkSymbolToReferentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SymbolUid     []string               `protobuf:"bytes,1,rep,name=symbol_uid,json=symbolUid,proto3" json:"symbol_uid,omitempty"`
	ReferentUid   string                 `protobuf:"bytes,2,opt,name=referent_uid,json=referentUid,proto3" json:"referent_uid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LinkSymbolToReferentRequest) Reset() {
	*x = LinkSymbolToReferentRequest{}
	mi := &file_dictionary_messages_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LinkSymbolToReferentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LinkSymbolToReferentRequest) ProtoMessage() {}

func (x *LinkSymbolToReferentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dictionary_messages_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LinkSymbolToReferentRequest.ProtoReflect.Descriptor instead.
func (*LinkSymbolToReferentRequest) Descriptor() ([]byte, []int) {
	return file_dictionary_messages_proto_rawDescGZIP(), []int{16}
}

func (x *LinkSymbolToReferentRequest) GetSymbolUid() []string {
	if x != nil {
		return x.SymbolUid
	}
	return nil
}

func (x *LinkSymbolToReferentRequest) GetReferentUid() string {
	if x != nil {
		return x.ReferentUid
	}
	return ""
}

type LinkSymbolToReferentResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Succes        bool                   `protobuf:"varint,1,opt,name=succes,proto3" json:"succes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LinkSymbolToReferentResponse) Reset() {
	*x = LinkSymbolToReferentResponse{}
	mi := &file_dictionary_messages_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LinkSymbolToReferentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LinkSymbolToReferentResponse) ProtoMessage() {}

func (x *LinkSymbolToReferentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dictionary_messages_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LinkSymbolToReferentResponse.ProtoReflect.Descriptor instead.
func (*LinkSymbolToReferentResponse) Descriptor() ([]byte, []int) {
	return file_dictionary_messages_proto_rawDescGZIP(), []int{17}
}

func (x *LinkSymbolToReferentResponse) GetSucces() bool {
	if x != nil {
		return x.Succes
	}
	return false
}

type LinkWordToSymbolRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WordUid       []string               `protobuf:"bytes,1,rep,name=word_uid,json=wordUid,proto3" json:"word_uid,omitempty"`
	SymbolUid     string                 `protobuf:"bytes,2,opt,name=symbol_uid,json=symbolUid,proto3" json:"symbol_uid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LinkWordToSymbolRequest) Reset() {
	*x = LinkWordToSymbolRequest{}
	mi := &file_dictionary_messages_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LinkWordToSymbolRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LinkWordToSymbolRequest) ProtoMessage() {}

func (x *LinkWordToSymbolRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dictionary_messages_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LinkWordToSymbolRequest.ProtoReflect.Descriptor instead.
func (*LinkWordToSymbolRequest) Descriptor() ([]byte, []int) {
	return file_dictionary_messages_proto_rawDescGZIP(), []int{18}
}

func (x *LinkWordToSymbolRequest) GetWordUid() []string {
	if x != nil {
		return x.WordUid
	}
	return nil
}

func (x *LinkWordToSymbolRequest) GetSymbolUid() string {
	if x != nil {
		return x.SymbolUid
	}
	return ""
}

type LinkWordToSymbolResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Succes        bool                   `protobuf:"varint,1,opt,name=succes,proto3" json:"succes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LinkWordToSymbolResponse) Reset() {
	*x = LinkWordToSymbolResponse{}
	mi := &file_dictionary_messages_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LinkWordToSymbolResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LinkWordToSymbolResponse) ProtoMessage() {}

func (x *LinkWordToSymbolResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dictionary_messages_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LinkWordToSymbolResponse.ProtoReflect.Descriptor instead.
func (*LinkWordToSymbolResponse) Descriptor() ([]byte, []int) {
	return file_dictionary_messages_proto_rawDescGZIP(), []int{19}
}

func (x *LinkWordToSymbolResponse) GetSucces() bool {
	if x != nil {
		return x.Succes
	}
	return false
}

type SetSymbolLemmaRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WordUid       string                 `protobuf:"bytes,1,opt,name=word_uid,json=wordUid,proto3" json:"word_uid,omitempty"`
	SymbolUid     string                 `protobuf:"bytes,2,opt,name=symbol_uid,json=symbolUid,proto3" json:"symbol_uid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetSymbolLemmaRequest) Reset() {
	*x = SetSymbolLemmaRequest{}
	mi := &file_dictionary_messages_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetSymbolLemmaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetSymbolLemmaRequest) ProtoMessage() {}

func (x *SetSymbolLemmaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dictionary_messages_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetSymbolLemmaRequest.ProtoReflect.Descriptor instead.
func (*SetSymbolLemmaRequest) Descriptor() ([]byte, []int) {
	return file_dictionary_messages_proto_rawDescGZIP(), []int{20}
}

func (x *SetSymbolLemmaRequest) GetWordUid() string {
	if x != nil {
		return x.WordUid
	}
	return ""
}

func (x *SetSymbolLemmaRequest) GetSymbolUid() string {
	if x != nil {
		return x.SymbolUid
	}
	return ""
}

type SetSymbolLemmaResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Succes        bool                   `protobuf:"varint,1,opt,name=succes,proto3" json:"succes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetSymbolLemmaResponse) Reset() {
	*x = SetSymbolLemmaResponse{}
	mi := &file_dictionary_messages_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetSymbolLemmaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetSymbolLemmaResponse) ProtoMessage() {}

func (x *SetSymbolLemmaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dictionary_messages_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetSymbolLemmaResponse.ProtoReflect.Descriptor instead.
func (*SetSymbolLemmaResponse) Descriptor() ([]byte, []int) {
	return file_dictionary_messages_proto_rawDescGZIP(), []int{21}
}

func (x *SetSymbolLemmaResponse) GetSucces() bool {
	if x != nil {
		return x.Succes
	}
	return false
}

type UnlinkSymbolFromReferentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SymbolUid     string                 `protobuf:"bytes,1,opt,name=symbol_uid,json=symbolUid,proto3" json:"symbol_uid,omitempty"`
	ReferentUid   string                 `protobuf:"bytes,2,opt,name=referent_uid,json=referentUid,proto3" json:"referent_uid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UnlinkSymbolFromReferentRequest) Reset() {
	*x = UnlinkSymbolFromReferentRequest{}
	mi := &file_dictionary_messages_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnlinkSymbolFromReferentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnlinkSymbolFromReferentRequest) ProtoMessage() {}

func (x *UnlinkSymbolFromReferentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dictionary_messages_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnlinkSymbolFromReferentRequest.ProtoReflect.Descriptor instead.
func (*UnlinkSymbolFromReferentRequest) Descriptor() ([]byte, []int) {
	return file_dictionary_messages_proto_rawDescGZIP(), []int{22}
}

func (x *UnlinkSymbolFromReferentRequest) GetSymbolUid() string {
	if x != nil {
		return x.SymbolUid
	}
	return ""
}

func (x *UnlinkSymbolFromReferentRequest) GetReferentUid() string {
	if x != nil {
		return x.ReferentUid
	}
	return ""
}

type UnlinkSymbolFromReferentResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UnlinkSymbolFromReferentResponse) Reset() {
	*x = UnlinkSymbolFromReferentResponse{}
	mi := &file_dictionary_messages_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnlinkSymbolFromReferentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnlinkSymbolFromReferentResponse) ProtoMessage() {}

func (x *UnlinkSymbolFromReferentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dictionary_messages_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnlinkSymbolFromReferentResponse.ProtoReflect.Descriptor instead.
func (*UnlinkSymbolFromReferentResponse) Descriptor() ([]byte, []int) {
	return file_dictionary_messages_proto_rawDescGZIP(), []int{23}
}

func (x *UnlinkSymbolFromReferentResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type UnlinkWordFromSymbolRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WordUid       string                 `protobuf:"bytes,1,opt,name=word_uid,json=wordUid,proto3" json:"word_uid,omitempty"`
	SymbolUid     string                 `protobuf:"bytes,2,opt,name=symbol_uid,json=symbolUid,proto3" json:"symbol_uid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UnlinkWordFromSymbolRequest) Reset() {
	*x = UnlinkWordFromSymbolRequest{}
	mi := &file_dictionary_messages_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnlinkWordFromSymbolRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnlinkWordFromSymbolRequest) ProtoMessage() {}

func (x *UnlinkWordFromSymbolRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dictionary_messages_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnlinkWordFromSymbolRequest.ProtoReflect.Descriptor instead.
func (*UnlinkWordFromSymbolRequest) Descriptor() ([]byte, []int) {
	return file_dictionary_messages_proto_rawDescGZIP(), []int{24}
}

func (x *UnlinkWordFromSymbolRequest) GetWordUid() string {
	if x != nil {
		return x.WordUid
	}
	return ""
}

func (x *UnlinkWordFromSymbolRequest) GetSymbolUid() string {
	if x != nil {
		return x.SymbolUid
	}
	return ""
}

type UnlinkWordFromSymbolResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UnlinkWordFromSymbolResponse) Reset() {
	*x = UnlinkWordFromSymbolResponse{}
	mi := &file_dictionary_messages_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnlinkWordFromSymbolResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnlinkWordFromSymbolResponse) ProtoMessage() {}

func (x *UnlinkWordFromSymbolResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dictionary_messages_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnlinkWordFromSymbolResponse.ProtoReflect.Descriptor instead.
func (*UnlinkWordFromSymbolResponse) Descriptor() ([]byte, []int) {
	return file_dictionary_messages_proto_rawDescGZIP(), []int{25}
}

func (x *UnlinkWordFromSymbolResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type ListAllLinkedReferentsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SymbolUid     string                 `protobuf:"bytes,1,opt,name=symbol_uid,json=symbolUid,proto3" json:"symbol_uid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListAllLinkedReferentsRequest) Reset() {
	*x = ListAllLinkedReferentsRequest{}
	mi := &file_dictionary_messages_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListAllLinkedReferentsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAllLinkedReferentsRequest) ProtoMessage() {}

func (x *ListAllLinkedReferentsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dictionary_messages_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAllLinkedReferentsRequest.ProtoReflect.Descriptor instead.
func (*ListAllLinkedReferentsRequest) Descriptor() ([]byte, []int) {
	return file_dictionary_messages_proto_rawDescGZIP(), []int{26}
}

func (x *ListAllLinkedReferentsRequest) GetSymbolUid() string {
	if x != nil {
		return x.SymbolUid
	}
	return ""
}

type ListAllLinkedReferentsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ReferentUids  []string               `protobuf:"bytes,1,rep,name=referent_uids,json=referentUids,proto3" json:"referent_uids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListAllLinkedReferentsResponse) Reset() {
	*x = ListAllLinkedReferentsResponse{}
	mi := &file_dictionary_messages_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListAllLinkedReferentsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAllLinkedReferentsResponse) ProtoMessage() {}

func (x *ListAllLinkedReferentsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dictionary_messages_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAllLinkedReferentsResponse.ProtoReflect.Descriptor instead.
func (*ListAllLinkedReferentsResponse) Descriptor() ([]byte, []int) {
	return file_dictionary_messages_proto_rawDescGZIP(), []int{27}
}

func (x *ListAllLinkedReferentsResponse) GetReferentUids() []string {
	if x != nil {
		return x.ReferentUids
	}
	return nil
}

type ListAllLinkedSymbolsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WordUid       string                 `protobuf:"bytes,1,opt,name=word_uid,json=wordUid,proto3" json:"word_uid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListAllLinkedSymbolsRequest) Reset() {
	*x = ListAllLinkedSymbolsRequest{}
	mi := &file_dictionary_messages_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListAllLinkedSymbolsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAllLinkedSymbolsRequest) ProtoMessage() {}

func (x *ListAllLinkedSymbolsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dictionary_messages_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAllLinkedSymbolsRequest.ProtoReflect.Descriptor instead.
func (*ListAllLinkedSymbolsRequest) Descriptor() ([]byte, []int) {
	return file_dictionary_messages_proto_rawDescGZIP(), []int{28}
}

func (x *ListAllLinkedSymbolsRequest) GetWordUid() string {
	if x != nil {
		return x.WordUid
	}
	return ""
}

type ListAllLinkedSymbolsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SymbolsUids   []string               `protobuf:"bytes,1,rep,name=symbols_uids,json=symbolsUids,proto3" json:"symbols_uids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListAllLinkedSymbolsResponse) Reset() {
	*x = ListAllLinkedSymbolsResponse{}
	mi := &file_dictionary_messages_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListAllLinkedSymbolsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAllLinkedSymbolsResponse) ProtoMessage() {}

func (x *ListAllLinkedSymbolsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dictionary_messages_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAllLinkedSymbolsResponse.ProtoReflect.Descriptor instead.
func (*ListAllLinkedSymbolsResponse) Descriptor() ([]byte, []int) {
	return file_dictionary_messages_proto_rawDescGZIP(), []int{29}
}

func (x *ListAllLinkedSymbolsResponse) GetSymbolsUids() []string {
	if x != nil {
		return x.SymbolsUids
	}
	return nil
}

var File_dictionary_messages_proto protoreflect.FileDescriptor

const file_dictionary_messages_proto_rawDesc = "" +
	"\n" +
	"\x19dictionary-messages.proto\x12\x06lexora\x1a\x14language-types.proto\"&\n" +
	"\x12GetReferentRequest\x12\x10\n" +
	"\x03uid\x18\x01 \x01(\tR\x03uid\"$\n" +
	"\x10GetSymbolRequest\x12\x10\n" +
	"\x03uid\x18\x01 \x01(\tR\x03uid\"\"\n" +
	"\x0eGetWordRequest\x12\x10\n" +
	"\x03uid\x18\x01 \x01(\tR\x03uid\"G\n" +
	"\x14ListReferentsRequest\x12\x12\n" +
	"\x04page\x18\x01 \x01(\x05R\x04page\x12\x1b\n" +
	"\tpage_size\x18\x02 \x01(\x05R\bpageSize\"h\n" +
	"\x15ListReferentsResponse\x12.\n" +
	"\treferents\x18\x01 \x03(\v2\x10.lexora.ReferentR\treferents\x12\x1f\n" +
	"\vtotal_count\x18\x02 \x01(\x05R\n" +
	"totalCount\"\xc0\x01\n" +
	"\x14FindReferentsRequest\x12\x14\n" +
	"\x05query\x18\x01 \x01(\tR\x05query\x123\n" +
	"\vsearch_mode\x18\x02 \x01(\x0e2\x12.lexora.SearchModeR\n" +
	"searchMode\x12,\n" +
	"\blanguage\x18\x03 \x01(\x0e2\x10.lexora.LanguageR\blanguage\x12\x12\n" +
	"\x04page\x18\x04 \x01(\x05R\x04page\x12\x1b\n" +
	"\tpage_size\x18\x05 \x01(\x05R\bpageSize\"h\n" +
	"\x15FindReferentsResponse\x12.\n" +
	"\treferents\x18\x01 \x03(\v2\x10.lexora.ReferentR\treferents\x12\x1f\n" +
	"\vtotal_count\x18\x02 \x01(\x05R\n" +
	"totalCount\"\x9d\x01\n" +
	"\x15CreateReferentRequest\x12!\n" +
	"\fen_reference\x18\x01 \x01(\tR\venReference\x12&\n" +
	"\fimage_source\x18\x02 \x01(\tH\x00R\vimageSource\x88\x01\x01\x12(\n" +
	"\asymbols\x18\x03 \x03(\v2\x0e.lexora.SymbolR\asymbolsB\x0f\n" +
	"\r_image_source\"\xf2\x01\n" +
	"\x13CreateSymbolRequest\x12!\n" +
	"\freferent_uid\x18\x01 \x01(\tR\vreferentUid\x12,\n" +
	"\blanguage\x18\x02 \x01(\x0e2\x10.lexora.LanguageR\blanguage\x123\n" +
	"\vsymbol_type\x18\x03 \x01(\x0e2\x12.lexora.SymbolTypeR\n" +
	"symbolType\x12'\n" +
	"\x05lemma\x18\x04 \x01(\v2\f.lexora.WordH\x00R\x05lemma\x88\x01\x01\x12\"\n" +
	"\x05words\x18\x05 \x03(\v2\f.lexora.WordR\x05wordsB\b\n" +
	"\x06_lemma\"\xcd\x01\n" +
	"\x11CreateWordRequest\x12\x1d\n" +
	"\n" +
	"symbol_uid\x18\x01 \x01(\tR\tsymbolUid\x12\x12\n" +
	"\x04word\x18\x02 \x01(\tR\x04word\x12&\n" +
	"\fsound_source\x18\x03 \x01(\tH\x00R\vsoundSource\x88\x01\x01\x12\x15\n" +
	"\x03ipa\x18\x04 \x01(\tH\x01R\x03ipa\x88\x01\x01\x12-\n" +
	"\tword_type\x18\x05 \x01(\x0e2\x10.lexora.WordTypeR\bwordTypeB\x0f\n" +
	"\r_sound_sourceB\x06\n" +
	"\x04_ipa\"E\n" +
	"\x15UpdateReferentRequest\x12,\n" +
	"\breferent\x18\x01 \x01(\v2\x10.lexora.ReferentR\breferent\"=\n" +
	"\x13UpdateSymbolRequest\x12&\n" +
	"\x06symbol\x18\x01 \x01(\v2\x0e.lexora.SymbolR\x06symbol\"5\n" +
	"\x11UpdateWordRequest\x12 \n" +
	"\x04word\x18\x01 \x01(\v2\f.lexora.WordR\x04word\":\n" +
	"\x15DeleteReferentRequest\x12!\n" +
	"\freferent_uid\x18\x01 \x01(\tR\vreferentUid\"4\n" +
	"\x13DeleteSymbolRequest\x12\x1d\n" +
	"\n" +
	"symbol_uid\x18\x01 \x01(\tR\tsymbolUid\".\n" +
	"\x11DeleteWordRequest\x12\x19\n" +
	"\bword_uid\x18\x01 \x01(\tR\awordUid\"_\n" +
	"\x1bLinkSymbolToReferentRequest\x12\x1d\n" +
	"\n" +
	"symbol_uid\x18\x01 \x03(\tR\tsymbolUid\x12!\n" +
	"\freferent_uid\x18\x02 \x01(\tR\vreferentUid\"6\n" +
	"\x1cLinkSymbolToReferentResponse\x12\x16\n" +
	"\x06succes\x18\x01 \x01(\bR\x06succes\"S\n" +
	"\x17LinkWordToSymbolRequest\x12\x19\n" +
	"\bword_uid\x18\x01 \x03(\tR\awordUid\x12\x1d\n" +
	"\n" +
	"symbol_uid\x18\x02 \x01(\tR\tsymbolUid\"2\n" +
	"\x18LinkWordToSymbolResponse\x12\x16\n" +
	"\x06succes\x18\x01 \x01(\bR\x06succes\"Q\n" +
	"\x15SetSymbolLemmaRequest\x12\x19\n" +
	"\bword_uid\x18\x01 \x01(\tR\awordUid\x12\x1d\n" +
	"\n" +
	"symbol_uid\x18\x02 \x01(\tR\tsymbolUid\"0\n" +
	"\x16SetSymbolLemmaResponse\x12\x16\n" +
	"\x06succes\x18\x01 \x01(\bR\x06succes\"c\n" +
	"\x1fUnlinkSymbolFromReferentRequest\x12\x1d\n" +
	"\n" +
	"symbol_uid\x18\x01 \x01(\tR\tsymbolUid\x12!\n" +
	"\freferent_uid\x18\x02 \x01(\tR\vreferentUid\"<\n" +
	" UnlinkSymbolFromReferentResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"W\n" +
	"\x1bUnlinkWordFromSymbolRequest\x12\x19\n" +
	"\bword_uid\x18\x01 \x01(\tR\awordUid\x12\x1d\n" +
	"\n" +
	"symbol_uid\x18\x02 \x01(\tR\tsymbolUid\"8\n" +
	"\x1cUnlinkWordFromSymbolResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\">\n" +
	"\x1dListAllLinkedReferentsRequest\x12\x1d\n" +
	"\n" +
	"symbol_uid\x18\x01 \x01(\tR\tsymbolUid\"E\n" +
	"\x1eListAllLinkedReferentsResponse\x12#\n" +
	"\rreferent_uids\x18\x01 \x03(\tR\freferentUids\"8\n" +
	"\x1bListAllLinkedSymbolsRequest\x12\x19\n" +
	"\bword_uid\x18\x01 \x01(\tR\awordUid\"A\n" +
	"\x1cListAllLinkedSymbolsResponse\x12!\n" +
	"\fsymbols_uids\x18\x01 \x03(\tR\vsymbolsUids*r\n" +
	"\n" +
	"SearchMode\x12\x1b\n" +
	"\x17SEARCH_MODE_UNSPECIFIED\x10\x00\x12\x14\n" +
	"\x10SEARCH_MODE_WORD\x10\x01\x12\x1c\n" +
	"\x18SEARCH_MODE_SYMBOL_LEMMA\x10\x02\x12\x13\n" +
	"\x0fSEARCH_MODE_ANY\x10\x03b\x06proto3"

var (
	file_dictionary_messages_proto_rawDescOnce sync.Once
	file_dictionary_messages_proto_rawDescData []byte
)

func file_dictionary_messages_proto_rawDescGZIP() []byte {
	file_dictionary_messages_proto_rawDescOnce.Do(func() {
		file_dictionary_messages_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_dictionary_messages_proto_rawDesc), len(file_dictionary_messages_proto_rawDesc)))
	})
	return file_dictionary_messages_proto_rawDescData
}

var file_dictionary_messages_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_dictionary_messages_proto_msgTypes = make([]protoimpl.MessageInfo, 30)
var file_dictionary_messages_proto_goTypes = []any{
	(SearchMode)(0),                          // 0: lexora.SearchMode
	(*GetReferentRequest)(nil),               // 1: lexora.GetReferentRequest
	(*GetSymbolRequest)(nil),                 // 2: lexora.GetSymbolRequest
	(*GetWordRequest)(nil),                   // 3: lexora.GetWordRequest
	(*ListReferentsRequest)(nil),             // 4: lexora.ListReferentsRequest
	(*ListReferentsResponse)(nil),            // 5: lexora.ListReferentsResponse
	(*FindReferentsRequest)(nil),             // 6: lexora.FindReferentsRequest
	(*FindReferentsResponse)(nil),            // 7: lexora.FindReferentsResponse
	(*CreateReferentRequest)(nil),            // 8: lexora.CreateReferentRequest
	(*CreateSymbolRequest)(nil),              // 9: lexora.CreateSymbolRequest
	(*CreateWordRequest)(nil),                // 10: lexora.CreateWordRequest
	(*UpdateReferentRequest)(nil),            // 11: lexora.UpdateReferentRequest
	(*UpdateSymbolRequest)(nil),              // 12: lexora.UpdateSymbolRequest
	(*UpdateWordRequest)(nil),                // 13: lexora.UpdateWordRequest
	(*DeleteReferentRequest)(nil),            // 14: lexora.DeleteReferentRequest
	(*DeleteSymbolRequest)(nil),              // 15: lexora.DeleteSymbolRequest
	(*DeleteWordRequest)(nil),                // 16: lexora.DeleteWordRequest
	(*LinkSymbolToReferentRequest)(nil),      // 17: lexora.LinkSymbolToReferentRequest
	(*LinkSymbolToReferentResponse)(nil),     // 18: lexora.LinkSymbolToReferentResponse
	(*LinkWordToSymbolRequest)(nil),          // 19: lexora.LinkWordToSymbolRequest
	(*LinkWordToSymbolResponse)(nil),         // 20: lexora.LinkWordToSymbolResponse
	(*SetSymbolLemmaRequest)(nil),            // 21: lexora.SetSymbolLemmaRequest
	(*SetSymbolLemmaResponse)(nil),           // 22: lexora.SetSymbolLemmaResponse
	(*UnlinkSymbolFromReferentRequest)(nil),  // 23: lexora.UnlinkSymbolFromReferentRequest
	(*UnlinkSymbolFromReferentResponse)(nil), // 24: lexora.UnlinkSymbolFromReferentResponse
	(*UnlinkWordFromSymbolRequest)(nil),      // 25: lexora.UnlinkWordFromSymbolRequest
	(*UnlinkWordFromSymbolResponse)(nil),     // 26: lexora.UnlinkWordFromSymbolResponse
	(*ListAllLinkedReferentsRequest)(nil),    // 27: lexora.ListAllLinkedReferentsRequest
	(*ListAllLinkedReferentsResponse)(nil),   // 28: lexora.ListAllLinkedReferentsResponse
	(*ListAllLinkedSymbolsRequest)(nil),      // 29: lexora.ListAllLinkedSymbolsRequest
	(*ListAllLinkedSymbolsResponse)(nil),     // 30: lexora.ListAllLinkedSymbolsResponse
	(*Referent)(nil),                         // 31: lexora.Referent
	(Language)(0),                            // 32: lexora.Language
	(*Symbol)(nil),                           // 33: lexora.Symbol
	(SymbolType)(0),                          // 34: lexora.SymbolType
	(*Word)(nil),                             // 35: lexora.Word
	(WordType)(0),                            // 36: lexora.WordType
}
var file_dictionary_messages_proto_depIdxs = []int32{
	31, // 0: lexora.ListReferentsResponse.referents:type_name -> lexora.Referent
	0,  // 1: lexora.FindReferentsRequest.search_mode:type_name -> lexora.SearchMode
	32, // 2: lexora.FindReferentsRequest.language:type_name -> lexora.Language
	31, // 3: lexora.FindReferentsResponse.referents:type_name -> lexora.Referent
	33, // 4: lexora.CreateReferentRequest.symbols:type_name -> lexora.Symbol
	32, // 5: lexora.CreateSymbolRequest.language:type_name -> lexora.Language
	34, // 6: lexora.CreateSymbolRequest.symbol_type:type_name -> lexora.SymbolType
	35, // 7: lexora.CreateSymbolRequest.lemma:type_name -> lexora.Word
	35, // 8: lexora.CreateSymbolRequest.words:type_name -> lexora.Word
	36, // 9: lexora.CreateWordRequest.word_type:type_name -> lexora.WordType
	31, // 10: lexora.UpdateReferentRequest.referent:type_name -> lexora.Referent
	33, // 11: lexora.UpdateSymbolRequest.symbol:type_name -> lexora.Symbol
	35, // 12: lexora.UpdateWordRequest.word:type_name -> lexora.Word
	13, // [13:13] is the sub-list for method output_type
	13, // [13:13] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_dictionary_messages_proto_init() }
func file_dictionary_messages_proto_init() {
	if File_dictionary_messages_proto != nil {
		return
	}
	file_language_types_proto_init()
	file_dictionary_messages_proto_msgTypes[7].OneofWrappers = []any{}
	file_dictionary_messages_proto_msgTypes[8].OneofWrappers = []any{}
	file_dictionary_messages_proto_msgTypes[9].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_dictionary_messages_proto_rawDesc), len(file_dictionary_messages_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   30,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_dictionary_messages_proto_goTypes,
		DependencyIndexes: file_dictionary_messages_proto_depIdxs,
		EnumInfos:         file_dictionary_messages_proto_enumTypes,
		MessageInfos:      file_dictionary_messages_proto_msgTypes,
	}.Build()
	File_dictionary_messages_proto = out.File
	file_dictionary_messages_proto_goTypes = nil
	file_dictionary_messages_proto_depIdxs = nil
}
