// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: lexora-admin-messages.proto

package lexora

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// * GENERIC MESSAGES
type PingRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RequesterId   string                 `protobuf:"bytes,1,opt,name=requester_id,json=requesterId,proto3" json:"requester_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PingRequest) Reset() {
	*x = PingRequest{}
	mi := &file_lexora_admin_messages_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingRequest) ProtoMessage() {}

func (x *PingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_lexora_admin_messages_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingRequest.ProtoReflect.Descriptor instead.
func (*PingRequest) Descriptor() ([]byte, []int) {
	return file_lexora_admin_messages_proto_rawDescGZIP(), []int{0}
}

func (x *PingRequest) GetRequesterId() string {
	if x != nil {
		return x.RequesterId
	}
	return ""
}

type PingResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Response      string                 `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
	VersionNumber string                 `protobuf:"bytes,2,opt,name=version_number,json=versionNumber,proto3" json:"version_number,omitempty"`
	Timestamp     string                 `protobuf:"bytes,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	ServiceIp     string                 `protobuf:"bytes,4,opt,name=service_ip,json=serviceIp,proto3" json:"service_ip,omitempty"`
	ServicePort   int32                  `protobuf:"varint,5,opt,name=service_port,json=servicePort,proto3" json:"service_port,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PingResponse) Reset() {
	*x = PingResponse{}
	mi := &file_lexora_admin_messages_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingResponse) ProtoMessage() {}

func (x *PingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_lexora_admin_messages_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingResponse.ProtoReflect.Descriptor instead.
func (*PingResponse) Descriptor() ([]byte, []int) {
	return file_lexora_admin_messages_proto_rawDescGZIP(), []int{1}
}

func (x *PingResponse) GetResponse() string {
	if x != nil {
		return x.Response
	}
	return ""
}

func (x *PingResponse) GetVersionNumber() string {
	if x != nil {
		return x.VersionNumber
	}
	return ""
}

func (x *PingResponse) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

func (x *PingResponse) GetServiceIp() string {
	if x != nil {
		return x.ServiceIp
	}
	return ""
}

func (x *PingResponse) GetServicePort() int32 {
	if x != nil {
		return x.ServicePort
	}
	return 0
}

// *ENUM MESSAGES
type GetLanguageDefinitionsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetLanguageDefinitionsRequest) Reset() {
	*x = GetLanguageDefinitionsRequest{}
	mi := &file_lexora_admin_messages_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetLanguageDefinitionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLanguageDefinitionsRequest) ProtoMessage() {}

func (x *GetLanguageDefinitionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_lexora_admin_messages_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLanguageDefinitionsRequest.ProtoReflect.Descriptor instead.
func (*GetLanguageDefinitionsRequest) Descriptor() ([]byte, []int) {
	return file_lexora_admin_messages_proto_rawDescGZIP(), []int{2}
}

type GetLanguageResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Languages     []string               `protobuf:"bytes,1,rep,name=languages,proto3" json:"languages,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetLanguageResponse) Reset() {
	*x = GetLanguageResponse{}
	mi := &file_lexora_admin_messages_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetLanguageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLanguageResponse) ProtoMessage() {}

func (x *GetLanguageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_lexora_admin_messages_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLanguageResponse.ProtoReflect.Descriptor instead.
func (*GetLanguageResponse) Descriptor() ([]byte, []int) {
	return file_lexora_admin_messages_proto_rawDescGZIP(), []int{3}
}

func (x *GetLanguageResponse) GetLanguages() []string {
	if x != nil {
		return x.Languages
	}
	return nil
}

type GetSymbolDefinitionsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSymbolDefinitionsRequest) Reset() {
	*x = GetSymbolDefinitionsRequest{}
	mi := &file_lexora_admin_messages_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSymbolDefinitionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSymbolDefinitionsRequest) ProtoMessage() {}

func (x *GetSymbolDefinitionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_lexora_admin_messages_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSymbolDefinitionsRequest.ProtoReflect.Descriptor instead.
func (*GetSymbolDefinitionsRequest) Descriptor() ([]byte, []int) {
	return file_lexora_admin_messages_proto_rawDescGZIP(), []int{4}
}

type GetSymbolDefinitionsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SymbolTypes   []string               `protobuf:"bytes,1,rep,name=symbol_types,json=symbolTypes,proto3" json:"symbol_types,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSymbolDefinitionsResponse) Reset() {
	*x = GetSymbolDefinitionsResponse{}
	mi := &file_lexora_admin_messages_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSymbolDefinitionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSymbolDefinitionsResponse) ProtoMessage() {}

func (x *GetSymbolDefinitionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_lexora_admin_messages_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSymbolDefinitionsResponse.ProtoReflect.Descriptor instead.
func (*GetSymbolDefinitionsResponse) Descriptor() ([]byte, []int) {
	return file_lexora_admin_messages_proto_rawDescGZIP(), []int{5}
}

func (x *GetSymbolDefinitionsResponse) GetSymbolTypes() []string {
	if x != nil {
		return x.SymbolTypes
	}
	return nil
}

type GetWordAttributeDefinitionsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetWordAttributeDefinitionsRequest) Reset() {
	*x = GetWordAttributeDefinitionsRequest{}
	mi := &file_lexora_admin_messages_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetWordAttributeDefinitionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWordAttributeDefinitionsRequest) ProtoMessage() {}

func (x *GetWordAttributeDefinitionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_lexora_admin_messages_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWordAttributeDefinitionsRequest.ProtoReflect.Descriptor instead.
func (*GetWordAttributeDefinitionsRequest) Descriptor() ([]byte, []int) {
	return file_lexora_admin_messages_proto_rawDescGZIP(), []int{6}
}

type GetWordAttributeDefinitionsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WordTenses    []string               `protobuf:"bytes,1,rep,name=word_tenses,json=wordTenses,proto3" json:"word_tenses,omitempty"`
	Genders       []string               `protobuf:"bytes,2,rep,name=genders,proto3" json:"genders,omitempty"`
	Numbers       []string               `protobuf:"bytes,3,rep,name=numbers,proto3" json:"numbers,omitempty"`
	Cases         []string               `protobuf:"bytes,4,rep,name=cases,proto3" json:"cases,omitempty"`
	Moods         []string               `protobuf:"bytes,5,rep,name=moods,proto3" json:"moods,omitempty"`
	Tenses        []string               `protobuf:"bytes,6,rep,name=tenses,proto3" json:"tenses,omitempty"`
	Aspects       []string               `protobuf:"bytes,7,rep,name=aspects,proto3" json:"aspects,omitempty"`
	Persons       []string               `protobuf:"bytes,8,rep,name=persons,proto3" json:"persons,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetWordAttributeDefinitionsResponse) Reset() {
	*x = GetWordAttributeDefinitionsResponse{}
	mi := &file_lexora_admin_messages_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetWordAttributeDefinitionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWordAttributeDefinitionsResponse) ProtoMessage() {}

func (x *GetWordAttributeDefinitionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_lexora_admin_messages_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWordAttributeDefinitionsResponse.ProtoReflect.Descriptor instead.
func (*GetWordAttributeDefinitionsResponse) Descriptor() ([]byte, []int) {
	return file_lexora_admin_messages_proto_rawDescGZIP(), []int{7}
}

func (x *GetWordAttributeDefinitionsResponse) GetWordTenses() []string {
	if x != nil {
		return x.WordTenses
	}
	return nil
}

func (x *GetWordAttributeDefinitionsResponse) GetGenders() []string {
	if x != nil {
		return x.Genders
	}
	return nil
}

func (x *GetWordAttributeDefinitionsResponse) GetNumbers() []string {
	if x != nil {
		return x.Numbers
	}
	return nil
}

func (x *GetWordAttributeDefinitionsResponse) GetCases() []string {
	if x != nil {
		return x.Cases
	}
	return nil
}

func (x *GetWordAttributeDefinitionsResponse) GetMoods() []string {
	if x != nil {
		return x.Moods
	}
	return nil
}

func (x *GetWordAttributeDefinitionsResponse) GetTenses() []string {
	if x != nil {
		return x.Tenses
	}
	return nil
}

func (x *GetWordAttributeDefinitionsResponse) GetAspects() []string {
	if x != nil {
		return x.Aspects
	}
	return nil
}

func (x *GetWordAttributeDefinitionsResponse) GetPersons() []string {
	if x != nil {
		return x.Persons
	}
	return nil
}

// *NLP MESSAGES
type AnalyzeTextAndAddToSuggestionsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TextToAnalyze string                 `protobuf:"bytes,1,opt,name=text_to_analyze,json=textToAnalyze,proto3" json:"text_to_analyze,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AnalyzeTextAndAddToSuggestionsRequest) Reset() {
	*x = AnalyzeTextAndAddToSuggestionsRequest{}
	mi := &file_lexora_admin_messages_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AnalyzeTextAndAddToSuggestionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnalyzeTextAndAddToSuggestionsRequest) ProtoMessage() {}

func (x *AnalyzeTextAndAddToSuggestionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_lexora_admin_messages_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnalyzeTextAndAddToSuggestionsRequest.ProtoReflect.Descriptor instead.
func (*AnalyzeTextAndAddToSuggestionsRequest) Descriptor() ([]byte, []int) {
	return file_lexora_admin_messages_proto_rawDescGZIP(), []int{8}
}

func (x *AnalyzeTextAndAddToSuggestionsRequest) GetTextToAnalyze() string {
	if x != nil {
		return x.TextToAnalyze
	}
	return ""
}

type AnalyzeTextAndAddToSuggestionsResponse struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	Success              bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	WordSuggestionsAdded int32                  `protobuf:"varint,2,opt,name=word_suggestions_added,json=wordSuggestionsAdded,proto3" json:"word_suggestions_added,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *AnalyzeTextAndAddToSuggestionsResponse) Reset() {
	*x = AnalyzeTextAndAddToSuggestionsResponse{}
	mi := &file_lexora_admin_messages_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AnalyzeTextAndAddToSuggestionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnalyzeTextAndAddToSuggestionsResponse) ProtoMessage() {}

func (x *AnalyzeTextAndAddToSuggestionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_lexora_admin_messages_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnalyzeTextAndAddToSuggestionsResponse.ProtoReflect.Descriptor instead.
func (*AnalyzeTextAndAddToSuggestionsResponse) Descriptor() ([]byte, []int) {
	return file_lexora_admin_messages_proto_rawDescGZIP(), []int{9}
}

func (x *AnalyzeTextAndAddToSuggestionsResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *AnalyzeTextAndAddToSuggestionsResponse) GetWordSuggestionsAdded() int32 {
	if x != nil {
		return x.WordSuggestionsAdded
	}
	return 0
}

type ApproveSuggestionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Word          *Word                  `protobuf:"bytes,1,opt,name=word,proto3" json:"word,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ApproveSuggestionRequest) Reset() {
	*x = ApproveSuggestionRequest{}
	mi := &file_lexora_admin_messages_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ApproveSuggestionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApproveSuggestionRequest) ProtoMessage() {}

func (x *ApproveSuggestionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_lexora_admin_messages_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApproveSuggestionRequest.ProtoReflect.Descriptor instead.
func (*ApproveSuggestionRequest) Descriptor() ([]byte, []int) {
	return file_lexora_admin_messages_proto_rawDescGZIP(), []int{10}
}

func (x *ApproveSuggestionRequest) GetWord() *Word {
	if x != nil {
		return x.Word
	}
	return nil
}

type ApproveSuggestionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NewWord       *Word                  `protobuf:"bytes,1,opt,name=new_word,json=newWord,proto3" json:"new_word,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ApproveSuggestionResponse) Reset() {
	*x = ApproveSuggestionResponse{}
	mi := &file_lexora_admin_messages_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ApproveSuggestionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApproveSuggestionResponse) ProtoMessage() {}

func (x *ApproveSuggestionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_lexora_admin_messages_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApproveSuggestionResponse.ProtoReflect.Descriptor instead.
func (*ApproveSuggestionResponse) Descriptor() ([]byte, []int) {
	return file_lexora_admin_messages_proto_rawDescGZIP(), []int{11}
}

func (x *ApproveSuggestionResponse) GetNewWord() *Word {
	if x != nil {
		return x.NewWord
	}
	return nil
}

type UpdateWordSuggestionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Word          *Word                  `protobuf:"bytes,1,opt,name=word,proto3" json:"word,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateWordSuggestionRequest) Reset() {
	*x = UpdateWordSuggestionRequest{}
	mi := &file_lexora_admin_messages_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateWordSuggestionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateWordSuggestionRequest) ProtoMessage() {}

func (x *UpdateWordSuggestionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_lexora_admin_messages_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateWordSuggestionRequest.ProtoReflect.Descriptor instead.
func (*UpdateWordSuggestionRequest) Descriptor() ([]byte, []int) {
	return file_lexora_admin_messages_proto_rawDescGZIP(), []int{12}
}

func (x *UpdateWordSuggestionRequest) GetWord() *Word {
	if x != nil {
		return x.Word
	}
	return nil
}

type UpdateWordRequestResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Word          *Word                  `protobuf:"bytes,1,opt,name=word,proto3" json:"word,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateWordRequestResponse) Reset() {
	*x = UpdateWordRequestResponse{}
	mi := &file_lexora_admin_messages_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateWordRequestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateWordRequestResponse) ProtoMessage() {}

func (x *UpdateWordRequestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_lexora_admin_messages_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateWordRequestResponse.ProtoReflect.Descriptor instead.
func (*UpdateWordRequestResponse) Descriptor() ([]byte, []int) {
	return file_lexora_admin_messages_proto_rawDescGZIP(), []int{13}
}

func (x *UpdateWordRequestResponse) GetWord() *Word {
	if x != nil {
		return x.Word
	}
	return nil
}

var File_lexora_admin_messages_proto protoreflect.FileDescriptor

const file_lexora_admin_messages_proto_rawDesc = "" +
	"\n" +
	"\x1blexora-admin-messages.proto\x12\x06lexora\x1a\x14language-types.proto\"0\n" +
	"\vPingRequest\x12!\n" +
	"\frequester_id\x18\x01 \x01(\tR\vrequesterId\"\xb1\x01\n" +
	"\fPingResponse\x12\x1a\n" +
	"\bresponse\x18\x01 \x01(\tR\bresponse\x12%\n" +
	"\x0eversion_number\x18\x02 \x01(\tR\rversionNumber\x12\x1c\n" +
	"\ttimestamp\x18\x03 \x01(\tR\ttimestamp\x12\x1d\n" +
	"\n" +
	"service_ip\x18\x04 \x01(\tR\tserviceIp\x12!\n" +
	"\fservice_port\x18\x05 \x01(\x05R\vservicePort\"\x1f\n" +
	"\x1dGetLanguageDefinitionsRequest\"3\n" +
	"\x13GetLanguageResponse\x12\x1c\n" +
	"\tlanguages\x18\x01 \x03(\tR\tlanguages\"\x1d\n" +
	"\x1bGetSymbolDefinitionsRequest\"A\n" +
	"\x1cGetSymbolDefinitionsResponse\x12!\n" +
	"\fsymbol_types\x18\x01 \x03(\tR\vsymbolTypes\"$\n" +
	"\"GetWordAttributeDefinitionsRequest\"\xf2\x01\n" +
	"#GetWordAttributeDefinitionsResponse\x12\x1f\n" +
	"\vword_tenses\x18\x01 \x03(\tR\n" +
	"wordTenses\x12\x18\n" +
	"\agenders\x18\x02 \x03(\tR\agenders\x12\x18\n" +
	"\anumbers\x18\x03 \x03(\tR\anumbers\x12\x14\n" +
	"\x05cases\x18\x04 \x03(\tR\x05cases\x12\x14\n" +
	"\x05moods\x18\x05 \x03(\tR\x05moods\x12\x16\n" +
	"\x06tenses\x18\x06 \x03(\tR\x06tenses\x12\x18\n" +
	"\aaspects\x18\a \x03(\tR\aaspects\x12\x18\n" +
	"\apersons\x18\b \x03(\tR\apersons\"O\n" +
	"%AnalyzeTextAndAddToSuggestionsRequest\x12&\n" +
	"\x0ftext_to_analyze\x18\x01 \x01(\tR\rtextToAnalyze\"x\n" +
	"&AnalyzeTextAndAddToSuggestionsResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x124\n" +
	"\x16word_suggestions_added\x18\x02 \x01(\x05R\x14wordSuggestionsAdded\"<\n" +
	"\x18ApproveSuggestionRequest\x12 \n" +
	"\x04word\x18\x01 \x01(\v2\f.lexora.WordR\x04word\"D\n" +
	"\x19ApproveSuggestionResponse\x12'\n" +
	"\bnew_word\x18\x01 \x01(\v2\f.lexora.WordR\anewWord\"?\n" +
	"\x1bUpdateWordSuggestionRequest\x12 \n" +
	"\x04word\x18\x01 \x01(\v2\f.lexora.WordR\x04word\"=\n" +
	"\x19UpdateWordRequestResponse\x12 \n" +
	"\x04word\x18\x01 \x01(\v2\f.lexora.WordR\x04wordb\x06proto3"

var (
	file_lexora_admin_messages_proto_rawDescOnce sync.Once
	file_lexora_admin_messages_proto_rawDescData []byte
)

func file_lexora_admin_messages_proto_rawDescGZIP() []byte {
	file_lexora_admin_messages_proto_rawDescOnce.Do(func() {
		file_lexora_admin_messages_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_lexora_admin_messages_proto_rawDesc), len(file_lexora_admin_messages_proto_rawDesc)))
	})
	return file_lexora_admin_messages_proto_rawDescData
}

var file_lexora_admin_messages_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_lexora_admin_messages_proto_goTypes = []any{
	(*PingRequest)(nil),                            // 0: lexora.PingRequest
	(*PingResponse)(nil),                           // 1: lexora.PingResponse
	(*GetLanguageDefinitionsRequest)(nil),          // 2: lexora.GetLanguageDefinitionsRequest
	(*GetLanguageResponse)(nil),                    // 3: lexora.GetLanguageResponse
	(*GetSymbolDefinitionsRequest)(nil),            // 4: lexora.GetSymbolDefinitionsRequest
	(*GetSymbolDefinitionsResponse)(nil),           // 5: lexora.GetSymbolDefinitionsResponse
	(*GetWordAttributeDefinitionsRequest)(nil),     // 6: lexora.GetWordAttributeDefinitionsRequest
	(*GetWordAttributeDefinitionsResponse)(nil),    // 7: lexora.GetWordAttributeDefinitionsResponse
	(*AnalyzeTextAndAddToSuggestionsRequest)(nil),  // 8: lexora.AnalyzeTextAndAddToSuggestionsRequest
	(*AnalyzeTextAndAddToSuggestionsResponse)(nil), // 9: lexora.AnalyzeTextAndAddToSuggestionsResponse
	(*ApproveSuggestionRequest)(nil),               // 10: lexora.ApproveSuggestionRequest
	(*ApproveSuggestionResponse)(nil),              // 11: lexora.ApproveSuggestionResponse
	(*UpdateWordSuggestionRequest)(nil),            // 12: lexora.UpdateWordSuggestionRequest
	(*UpdateWordRequestResponse)(nil),              // 13: lexora.UpdateWordRequestResponse
	(*Word)(nil),                                   // 14: lexora.Word
}
var file_lexora_admin_messages_proto_depIdxs = []int32{
	14, // 0: lexora.ApproveSuggestionRequest.word:type_name -> lexora.Word
	14, // 1: lexora.ApproveSuggestionResponse.new_word:type_name -> lexora.Word
	14, // 2: lexora.UpdateWordSuggestionRequest.word:type_name -> lexora.Word
	14, // 3: lexora.UpdateWordRequestResponse.word:type_name -> lexora.Word
	4,  // [4:4] is the sub-list for method output_type
	4,  // [4:4] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_lexora_admin_messages_proto_init() }
func file_lexora_admin_messages_proto_init() {
	if File_lexora_admin_messages_proto != nil {
		return
	}
	file_language_types_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_lexora_admin_messages_proto_rawDesc), len(file_lexora_admin_messages_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_lexora_admin_messages_proto_goTypes,
		DependencyIndexes: file_lexora_admin_messages_proto_depIdxs,
		MessageInfos:      file_lexora_admin_messages_proto_msgTypes,
	}.Build()
	File_lexora_admin_messages_proto = out.File
	file_lexora_admin_messages_proto_goTypes = nil
	file_lexora_admin_messages_proto_depIdxs = nil
}
